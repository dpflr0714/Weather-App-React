{"version":3,"sources":["weatherIcons/cloudy.svg","weatherIcons/clear.svg","weatherIcons/drizzle.svg","weatherIcons/rainy.svg","weatherIcons/snowy.svg","weatherIcons/thunder.svg","App.js","reportWebVitals.js","index.js"],"names":["apiKey","WeatherApp","handleInputChanged","event","setState","target","name","value","setDarkMode","darkModeToggle","state","getWeather","obj","preventDefault","fetch","city","then","response","status","json","Error","statusText","data","maxTemp","main","temp_max","minTemp","temp_min","temp","humidity","condition","weather","toLowerCase","catch","error","alert","message","initial","this","weatherIcon","theme","createMuiTheme","palette","type","clear","cloudy","drizzle","rainy","snowy","thunder","ThemeProvider","Paper","style","height","Box","AppBar","Toolbar","flexGrow","justifyContent","IconButton","Button","position","left","top","transform","display","FormControlLabel","control","Switch","checked","onChange","label","TextField","variant","size","fullWidth","startIcon","color","onClick","fontSize","Math","round","parseInt","alignContent","alignItems","src","width","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.c23d71a0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cloudy.24f9a474.svg\";","export default __webpack_public_path__ + \"static/media/clear.c33ef664.svg\";","export default __webpack_public_path__ + \"static/media/drizzle.9988edfd.svg\";","export default __webpack_public_path__ + \"static/media/rainy.130d6250.svg\";","export default __webpack_public_path__ + \"static/media/snowy.dce3f5e7.svg\";","export default __webpack_public_path__ + \"static/media/thunder.19ff3c30.svg\";","import React from 'react'\nimport CloudIcon from '@material-ui/icons/Cloud'\nimport TextField from '@material-ui/core/TextField'\nimport cloudy from './weatherIcons/cloudy.svg'\nimport clear from './weatherIcons/clear.svg'\nimport drizzle from './weatherIcons/drizzle.svg'\nimport rainy from './weatherIcons/rainy.svg'\nimport snowy from './weatherIcons/snowy.svg'\nimport thunder from './weatherIcons/thunder.svg'\nimport { Switch, Paper , Button , Typography , FormControlLabel , FormGroup , makeStyles, AppBar , Toolbar , IconButton , Box, Icon} from '@material-ui/core/'\nimport { ThemeProvider, createMuiTheme} from '@material-ui/core/styles'\nimport GitHubIcon from '@material-ui/icons/GitHub'\n\n\nconst apiKey = \"b2dc6d0fb2c25c99d7b90a281b8cedd3\"\n\nclass WeatherApp extends React.Component{\n  constructor(){\n    super()\n    this.state = {\n      state: \"CA\",\n      city: \"Los Angeles\",\n      maxTemp: \"\",\n      minTemp: \"\",\n      temp: \"\",\n      humidity: \"\",\n      condition : \"\",\n      darkModeToggle: true,\n      message: \"\"\n    }\n  }\n\n  \n  handleInputChanged = (event) => {\n    this.setState({\n      [event.target.name] : event.target.value\n    })\n  }\n\n  setDarkMode = () => {\n    this.setState({\n      darkModeToggle : !this.state.darkModeToggle\n    })\n  }\n  \n  getWeather = (event) => {\n    let obj;\n    event.preventDefault(); //this stops from the page from reloading everytime you submit the search\n    \n    let response = fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=${apiKey}`)\n      .then(response => {\n        if(response.status >= 200 && response.status <= 299){\n          return response.json()\n        } else {\n          throw Error(response.statusText) \n        }\n      })\n      .then(data => obj = data)\n      .then(() => \n      this.setState({\n        maxTemp : obj.main.temp_max,\n        minTemp: obj.main.temp_min,\n        temp: obj.main.temp,\n        humidity : obj.main.humidity,\n        condition : obj.weather[0].main.toLowerCase(),\n      })).catch((error) => alert(\"Are you sure the place exists on Earth?\"))\n  }\n\n  componentDidMount(){\n    let initial;\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=${apiKey}`)\n      .then((response) => response.json())\n      .then(data => initial = data)\n      .then(() => \n      this.setState({\n        maxTemp : initial.main.temp_max,\n        minTemp: initial.main.temp_min,\n        temp: initial.main.temp,\n        humidity : initial.main.humidity,\n        condition : initial.weather[0].main.toLowerCase(),\n      },))\n  }\n\n\n  render(){\n\n    const theme = createMuiTheme({\n      palette: {\n        type: this.state.darkModeToggle ? \"dark\" : \"light\",\n      },\n    });\n\n\n    let weatherIcon;\n\n    if(this.state.condition === \"clear\"){\n    weatherIcon = clear\n  } else if (this.state.condition === \"clouds\"){\n    weatherIcon = cloudy\n  } else if (this.state.condition === \"drizzle\"){\n    weatherIcon = drizzle\n  } else if (this.state.condition === \"rain\"){\n    weatherIcon = rainy\n  } else if (this.state.condition === \"snow\"){\n    weatherIcon = snowy\n  } else if (this.state.condition === \"thunderstorm\"){\n    weatherIcon = thunder\n  } else {\n    weatherIcon = clear\n  }\n\n    return(\n      <ThemeProvider theme={theme}>\n        <Paper style={{ height: \"100vh\" }}>\n          <Box>\n            <AppBar>\n              <Toolbar style={{flexGrow : \"1\" , justifyContent: \"space-between\" }}>\n                <IconButton>\n                  <GitHubIcon/>\n                </IconButton>\n                <Button>About Me</Button>\n              </Toolbar>\n            </AppBar>\n          </Box>\n            <div style={{\n              position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)'\n            }}>\n                <div style={{\n                  display : 'flex' , justifyContent: 'space-between'\n                }}>\n                    <h1>Weather App</h1>\n                        <FormControlLabel control ={\n                          <Switch checked={this.state.darkModeToggle} onChange={this.setDarkMode}/>}\n                          label=\"Dark Mode\"\n                        />\n                </div>\n                <div>\n                  <form>\n                      <TextField variant=\"filled\" size=\"small\" label=\"City\" name=\"city\" onChange={this.handleInputChanged} fullWidth/>\n                      <TextField variant=\"filled\" size=\"small\" label=\"State\" name=\"state\" onChange={this.handleInputChanged} fullWidth/>\n                      <Button variant=\"contained\" size=\"medium\" startIcon={<CloudIcon/>} color=\"primary\" onClick={this.getWeather} fullWidth>Search</Button>\n                  </form>\n                  <div style={{\n                    display : 'flex' , justifyContent : 'space-between' \n                  }}>    \n                    <div>        \n                      <p style={{fontSize: 30}}>{this.state.city}, {this.state.state}</p>\n                      <p>{Math.round((parseInt(this.state.maxTemp)-273)*1.8)+32} / {Math.round((parseInt(this.state.minTemp)-273)*1.8)+32}</p>\n                      <p>Humidity: {this.state.humidity + \"%\"}</p>\n                      <p>Condition: {this.state.condition}</p>\n                    </div>\n                    <div style={{\n                      display : 'flex' , justifyContent : 'space-evenly' , alignContent : 'flex-start' , flexGrow : '1' , alignItems : 'center'\n                    }}>    \n                      <p style={{fontSize: 60}}>{Math.round((parseInt(this.state.temp)-273)*1.8)+32}</p>\n                      <img src={weatherIcon} style={{height: '100px', width: 'auto'}}></img>\n                    </div>\n                  </div>\n                </div>\n            </div>\n          </Paper>\n        </ThemeProvider>\n    )\n  }\n}\n\nexport default WeatherApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}